name: Build and test

on:
  - push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['lts/*', 'latest']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2 

    - name: Set up Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}

    - name: Install dependencies
      run: npm install

    - name: Run the tests
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: ${{ matrix.node }} == 16
      with:
          token: ${{ secrets.CODECOV_TOKEN }}

  dockerPush:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: read
      packages: write
      
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  hetznerDeploy:
    runs-on: gdqreminder
    needs: [dockerPush]
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push')
    steps:
      - name: Run refresh script
        run: refreshGDQReminder.ps1
